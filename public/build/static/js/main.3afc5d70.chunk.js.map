{"version":3,"sources":["components/topBar/socialBar.jsx","components/header/Header.jsx","components/cards/NepalInfoCard.jsx","components/cards/News.jsx","pages/homePage.jsx","components/pannels/worldPannel.jsx","pages/worldInfo.jsx","components/footer/footer.jsx","components/drawer/drawerMenu.jsx","pages/nepalInfo.jsx","App.js","serviceWorker.js","index.js","assets/icons/world .svg","assets/icons/nepal.svg","assets/flags/usa.svg","assets/flags/india.svg","assets/flags/spain.svg","assets/flags/italy.svg","assets/flags/nepal.svg"],"names":["SocialBar","props","classes","useStyles","Container","Toolbar","className","root","href","size","color","icon","makeStyles","theme","display","flexWrap","justifyContent","margin","spacing","Header","Paper","IconButton","onClick","openDrawer","menuButton","container","Typography","backgroundColor","width","position","top","zIndex","padding","fontSize","nepaliNumberFormat","number","nepali","nepaliNumber","nepaliFormat","NepaliCardInfo","useState","data","setData","nepalData","setNepalData","console","log","useEffect","Axios","get","then","res","catch","err","Grid","item","xs","sm","paper","_id","src","globe","alt","globeIcon","worldData","numbers","totalCases","totalDeaths","newCases","style","totalRecovered","textDecoration","to","Button","variant","moreInfo","Skeleton","animation","tested_positive","nepal","nepalIcon","deaths","recovered","flexGrow","marginTop","textAlign","palette","text","secondary","breakpoints","down","height","News","news","setNews","newsLength","filter","lang","Theme","useTheme","matches","useMediaQuery","hideHeader","holder","header","GridList","gridList","cols","map","index","Card","key","elevation","newsCard","CardHeader","title","subheader","fromNow","created_at","CardMedia","media","image","image_url","CardContent","component","summary","CardActions","url","spinnerContainer","spinerHolder","CircularProgress","spinner","bottom","paddingTop","up","marginLeft","HomePage","WorldPannel","React","america","setAmerica","spain","setSpain","italy","setItaly","india","setIndaia","country","usaFlag","newDeaths","spainFlag","italyFlag","indiaFlag","columns","id","label","minWidth","maxWidth","align","format","value","toLocaleString","maxHeight","WoldInfo","rows","setRows","push","NewConfirmedNepali","TotalConfirmedNepali","TotalDeathsNepali","NewDeathsNepali","TotalRecoveredNepali","NewRecoveredNepali","criticalCases","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","TableBody","row","hover","role","tabIndex","indec","Footer","List","ListItem","iconButton","HomeSharp","marginRight","EventNoteSharp","PublicOutlined","ExploreSharp","EmailSharp","CopyrightSharp","DrawerMenu","Drawer","onClose","closeDrawer","anchor","open","drawer","NepalInfo","rightData","tested_total","in_isolation","pending_result","App","document","setDrawer","event","type","exact","path","render","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.3afc5d70.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles, Container, Toolbar } from '@material-ui/core'\r\nimport {FaInstagram, FaTwitterSquare, FaGithub } from 'react-icons/fa'\r\nexport default function SocialBar(props) {\r\n\r\n\r\n  const classes = useStyles();\r\n   return(\r\n     <>\r\n     <div>\r\n       <Container>\r\n        <Toolbar className={classes.root} >\r\n          <a href='https://www.github.com/sujandahal38'><FaGithub size='1.5em' color='black' className={classes.icon} /></a> \r\n          <a href='https://www.instagram.com/__sujan____/'><FaInstagram size='1.5em'  color='#E1306C' className={classes.icon} /></a> \r\n           <a href='https://twitter.com/DahalSd1'><FaTwitterSquare size='1.5em' color='#1DA1F2' className={classes.icon}/></a>\r\n        </Toolbar>\r\n\r\n     </Container>\r\n     </div>\r\n     </>\r\n   )\r\n}\r\n\r\nconst useStyles = makeStyles((theme)=> ({\r\nroot: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'flex-end'\r\n},\r\nicon: {\r\n  margin : theme.spacing(1),\r\n  size: '2em'\r\n}\r\n\r\n}));","import React from 'react';\r\nimport { Paper, Typography, Container, makeStyles, Toolbar, IconButton } from '@material-ui/core';\r\nimport {IoIosMenu } from 'react-icons/io'\r\n\r\nexport default function Header(props) {\r\n\r\n  const classes = useStyles();\r\n    return(\r\n      <>\r\n      <Paper className={classes.root}>\r\n        <Toolbar>\r\n        <IconButton onClick={props.openDrawer} className={classes.menuButton}><IoIosMenu className={classes.icon} /></IconButton>\r\n        <Container className={classes.container}>\r\n        <Typography className={classes.Typography}>कोरोना संक्र्मण तथ्यांक </Typography>\r\n        </Container>\r\n        </Toolbar>\r\n      </Paper>\r\n    \r\n      </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: '#34C307',\r\n    color: 'white',\r\n    width: '100%',\r\n    margin: '0px',\r\n    position: 'sticky',\r\n    top: '0px',\r\n    zIndex: '5'\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center'\r\n  },\r\n  Typography: {\r\n    padding: theme.spacing(2),\r\n    fontSize: theme.spacing(3)\r\n\r\n  },\r\n  menuButton:{\r\n    color: 'white',\r\n  },\r\n  icon: {\r\n    size: '75px'\r\n  },\r\n}));","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Container, Typography, Toolbar, Button } from \"@material-ui/core\";\r\nimport globe from \"../../assets/icons/world .svg\";\r\nimport nepal from \"../../assets/icons/nepal.svg\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  englishToNepaliNumber as nepaliNumber,\r\n  nepaliNumberFormat as nepaliFormat,\r\n} from \"nepali-number\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst nepaliNumberFormat = (number) => {\r\n  const nepali = nepaliNumber(number);\r\n  const finalNumber = nepaliFormat(nepali, \"ne\");\r\n  return finalNumber;\r\n};\r\n\r\nexport default function NepaliCardInfo() {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState({});\r\n  const [nepalData, setNepalData] = useState({});\r\n  console.log(nepalData);\r\n  const fetchData = () => {\r\n    Axios.get(\"https://nepalcorona.info/api/v1/data/world\")\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        setData(res.data[0]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n      Axios.get(\"https://nepalcorona.info/api/v1/data/nepal\")\r\n      .then((res) => {\r\n        setNepalData(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, []);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Paper className={classes.paper}>\r\n              {data._id ? (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <img src={globe} alt=\"gobe\" className={classes.globeIcon} />\r\n                  </Grid>\r\n                  <Grid className={classes.worldData} item xs={12} sm={6}>\r\n                    <Toolbar className={classes.worldData}>\r\n                      <Typography>जम्मा संक्रमित :</Typography>\r\n                      <Typography color='primary' className={classes.numbers}>\r\n                        {nepaliNumberFormat(data.totalCases)}\r\n                      </Typography>\r\n                    </Toolbar>\r\n                    <Toolbar  className={classes.worldData}>\r\n                      <Typography>कुल मृत्यु :</Typography>\r\n                      <Typography color='error' className={classes.numbers}>\r\n                        {nepaliNumberFormat(data.totalDeaths)}\r\n                      </Typography>\r\n                    </Toolbar>\r\n                    <Toolbar className={classes.worldData}>\r\n                      <Typography>नयाँ संक्रमण :</Typography>\r\n                      <Typography color='error' className={classes.numbers}>\r\n                        {nepaliNumberFormat(data.newCases)}\r\n                      </Typography>\r\n                    </Toolbar>\r\n                    <Toolbar className={classes.worldData}>\r\n                      <Typography>कुल निको भएको :</Typography>\r\n                      <Typography style={{color : '#34C307'}} className={classes.numbers}>\r\n                        {nepaliNumberFormat(data.totalRecovered)}\r\n                      </Typography>\r\n                    </Toolbar>\r\n                    <Link style={{textDecoration: 'none'}} to='/worldinfo'><Button variant='contained' color='secondary' className={classes.moreInfo} >थप विबरण</Button></Link>\r\n\r\n                  </Grid>\r\n                </Grid>\r\n               \r\n              ) : (\r\n                <>\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                </>\r\n\r\n               \r\n              )}\r\n                \r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Paper className={classes.paper}>\r\n              { nepalData.tested_positive ? (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <img src={nepal} alt=\"gobe\" className={classes.nepalIcon} />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Toolbar className={classes.worldData}>\r\n                      <Typography>जम्मा संक्रमित :</Typography>\r\n                      <Typography color='primary' className={classes.numbers}>\r\n                      {nepaliNumberFormat(nepalData.tested_positive)}\r\n                      </Typography>\r\n                    </Toolbar>\r\n                    <Toolbar className={classes.worldData}>\r\n                      <Typography>कुल मृत्यु :</Typography>\r\n                      <Typography color='error' className={classes.numbers}>\r\n                      {nepaliNumberFormat(nepalData.deaths)}\r\n                      </Typography>\r\n                    </Toolbar>\r\n                    <Toolbar className={classes.worldData}>\r\n                      <Typography>नयाँ संक्रमण :</Typography>\r\n                      <Typography color='error' className={classes.numbers}>\r\n                      {nepaliNumberFormat(nepalData.deaths)}\r\n                      </Typography>\r\n                    </Toolbar>\r\n                    <Toolbar className={classes.worldData}>\r\n                      <Typography  >कुल निको भएको :</Typography>\r\n                      <Typography style={{color : '#34C307'}} className={classes.numbers}>\r\n                      {nepaliNumberFormat(nepalData.recovered)}\r\n                      </Typography>\r\n                    </Toolbar>\r\n                    <Link style={{textDecoration: 'none'}} to='/nepalinfo'><Button variant='contained' color='secondary' className={classes.moreInfo} >थप विबरण</Button></Link>\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                <>\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                  <Skeleton animation=\"wave\" />\r\n                </>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n     \r\n    </div>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: theme.spacing(6),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  nepalIcon: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      height: theme.spacing(15),\r\n      width: theme.spacing(15),\r\n    },\r\n    height: theme.spacing(25),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  globeIcon: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      height: theme.spacing(15),\r\n      width: theme.spacing(15),\r\n    },\r\n    height: theme.spacing(25),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  worldData: {\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n  },\r\n  numbers: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  moreInfo: {\r\n    width : '100%',\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  Toolbar,\r\n  Paper,\r\n  Typography,\r\n  makeStyles,\r\n  GridList,\r\n  Card,\r\n  CardHeader,\r\n  CircularProgress,\r\n  useTheme,\r\n  useMediaQuery,\r\n  CardMedia,\r\n  Container,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Moment from \"react-moment\";\r\n\r\nexport default function News(props) {\r\n  const [news, setNews] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    Axios.get(`https://nepalcorona.info/api/v1/news?limit=${props.newsLength}`)\r\n      .then((res) => {\r\n        const data = res.data.data.filter((item) => item.lang === \"np\");\r\n        setNews(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [props.newsLength]);\r\n\r\n  const classes = useStyles();\r\n  const Theme = useTheme();\r\n\r\n  const matches = useMediaQuery(Theme.breakpoints.down(\"md\"));\r\n\r\n  return (\r\n    <>\r\n    {!props.hideHeader ?\r\n      <Paper className={classes.holder}>\r\n        <Toolbar className={classes.header}>\r\n          <Typography variant=\"h6\">समाचारहरु </Typography>\r\n        </Toolbar>\r\n      </Paper>\r\n   : null}\r\n\r\n      <div className={classes.root}>\r\n        {news[0] ? (\r\n          <Container>\r\n            <GridList\r\n              spacing={0}\r\n              className={classes.gridList}\r\n              cols={matches ? 1 : 2.5}\r\n            >\r\n              {news.map((item, index) => (\r\n                <Card\r\n                  style={{ height: \"auto\" }}\r\n                  key={index}\r\n                  elevation={4}\r\n                  className={classes.newsCard}\r\n                >\r\n                  <CardHeader\r\n                    title={item.title}\r\n                    subheader={<Moment fromNow>{item.created_at}</Moment>}\r\n                  />\r\n\r\n                  <CardMedia className={classes.media} image={item.image_url} />\r\n                  <CardContent>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                      style={{textAlign: 'justify' ,color: 'black'}}\r\n                    >\r\n                      {item.summary}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <a className={classes.moreInfo} href={item.url}>\r\n                      {\" \"}\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={classes.moreInfo}\r\n                      >\r\n                        पुरा पढ्नुहोस\r\n                      </Button>\r\n                    </a>\r\n                  </CardActions>\r\n                </Card>\r\n              ))}\r\n            </GridList>\r\n          </Container>\r\n        ) : (\r\n          <div className={classes.spinnerContainer}>\r\n          <Toolbar className={classes.spinerHolder}>\r\n            <CircularProgress\r\n              variant=\"indeterminate\"\r\n              className={classes.spinner}\r\n            />\r\n          </Toolbar>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  moreInfo: {\r\n    width: \"100%\",\r\n    color: \"white\",\r\n    bottom: \"0px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  newsCard: {\r\n    marginTop: theme.spacing(5),\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(5),\r\n      width: \"40%\",\r\n      marginLeft: theme.spacing(15),\r\n    },\r\n  },\r\n  spinerHolder: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n  },\r\n  spinnerContainer: {\r\n    height: '1000px'\r\n  },\r\n  holder: {\r\n    marginTop: theme.spacing(3),\r\n    backgroundColor: \"#34C307\",\r\n  },\r\n  header: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    color: \"white\",\r\n  },\r\n  spinner: {\r\n    marginTop: theme.spacing(5),\r\n    color: \"#34C307\",\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport NepaliCardInfo from '../components/cards/NepalInfoCard';\r\nimport News from '../components/cards/News';\r\n\r\nexport default function HomePage(props) {\r\n  return(\r\n   <>\r\n    <NepaliCardInfo/>\r\n    <News newsLength={10}/>\r\n   </>\r\n  )\r\n}","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  Container,\r\n  CardMedia,\r\n  makeStyles,\r\n  CardContent,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  englishToNepaliNumber as nepaliNumber,\r\n  nepaliNumberFormat as nepaliFormat,\r\n} from \"nepali-number\";\r\nimport usaFlag from \"../../assets/flags/usa.svg\";\r\nimport indiaFlag from \"../../assets/flags/india.svg\";\r\nimport spainFlag from \"../../assets/flags/spain.svg\";\r\nimport italyFlag from \"../../assets/flags/italy.svg\";\r\n\r\nconst nepaliNumberFormat = (number) => {\r\n  const nepali = nepaliNumber(number);\r\n  const finalNumber = nepaliFormat(nepali, \"ne\");\r\n  return finalNumber;\r\n};\r\n\r\nexport default function WorldPannel(props) {\r\n  const [america, setAmerica] = React.useState({});\r\n  const [spain, setSpain] = React.useState({});\r\n  const [italy, setItaly] = React.useState({});\r\n  const [india, setIndaia] = React.useState({});\r\n  const classes = useStyles();\r\n  console.log(america);\r\n  useEffect(() => {\r\n    setAmerica(props.data.filter((item) => item.country === \"USA\"));\r\n    setSpain(props.data.filter((item) => item.country === \"Spain\"));\r\n    setItaly(props.data.filter((item) => item.country === \"Italy\"));\r\n    setIndaia(props.data.filter((item) => item.country === \"India\"));\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <>\r\n      {america[0] ? (\r\n        <Container className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={3}>\r\n              <Card elevation={5}>\r\n                <CardHeader title='अमेरिका' />\r\n                <CardMedia className={classes.media} image={usaFlag} />\r\n                <CardContent>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>जम्मा संक्रमित :</Typography>\r\n                    <Typography color=\"primary\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(america[0].totalCases)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>कुल मृत्यु :</Typography>\r\n                    <Typography color=\"error\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(america[0].totalDeaths)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>नयाँ संक्रमण :</Typography>\r\n                    <Typography color=\"error\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(america[0].newCases)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>नयाँ मृतक:</Typography>\r\n                    <Typography\r\n                      style={{ color: \"red\" }}\r\n                      className={classes.numbers}\r\n                    >\r\n                     +{nepaliNumberFormat(america[0].newDeaths)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>{\" \"}\r\n            <Grid item xs={12} sm={3}>\r\n              <Card elevation={5}>\r\n                <CardHeader title='स्पेन्' />\r\n                <CardMedia className={classes.media} image={spainFlag} />\r\n                <CardContent>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>जम्मा संक्रमित :</Typography>\r\n                    <Typography color=\"primary\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(spain[0].totalCases)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>कुल मृत्यु :</Typography>\r\n                    <Typography color=\"error\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(spain[0].totalDeaths)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>नयाँ संक्रमण :</Typography>\r\n                    <Typography color=\"error\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(spain[0].newCases)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>नयाँ मृतक:</Typography>\r\n                    <Typography\r\n                      style={{ color: \"red\" }}\r\n                      className={classes.numbers}\r\n                    >\r\n                     +{nepaliNumberFormat(spain[0].newDeaths)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <Card elevation={5}>\r\n                <CardHeader title='इटाली' />\r\n                <CardMedia className={classes.media} image={italyFlag} />\r\n                <CardContent>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>जम्मा संक्रमित :</Typography>\r\n                    <Typography color=\"primary\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(italy[0].totalCases)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>कुल मृत्यु :</Typography>\r\n                    <Typography color=\"error\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(italy[0].totalDeaths)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>नयाँ संक्रमण :</Typography>\r\n                    <Typography color=\"error\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(italy[0].newCases)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>नयाँ मृतक:</Typography>\r\n                    <Typography\r\n                      style={{ color: \"red\" }}\r\n                      className={classes.numbers}\r\n                    >\r\n                     +{nepaliNumberFormat(italy[0].newDeaths)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <Card elevation={5}>\r\n                <CardHeader title='भारत' />\r\n                <CardMedia className={classes.media} image={indiaFlag} />\r\n                <CardContent>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>जम्मा संक्रमित :</Typography>\r\n                    <Typography color=\"primary\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(india[0].totalCases)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>कुल मृत्यु :</Typography>\r\n                    <Typography color=\"error\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(india[0].totalDeaths)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>नयाँ संक्रमण :</Typography>\r\n                    <Typography color=\"error\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(india[0].newCases)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>नयाँ मृतक:</Typography>\r\n                    <Typography\r\n                      style={{ color: \"red\" }}\r\n                      className={classes.numbers}\r\n                    >\r\n                     +{nepaliNumberFormat(india[0].newDeaths)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  root: {\r\n    marginTop: \"25px\",\r\n  },\r\n  worldData: {\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n  },\r\n  numbers: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport {\r\n englishToNepaliNumber as nepaliNumber,\r\n nepaliNumberFormat as nepaliFormat,\r\n} from \"nepali-number\";\r\nimport Axios from 'axios';\r\nimport WorldPannel from \"../components/pannels/worldPannel\";\r\n\r\nconst nepaliNumberFormat = (number) => {\r\n const nepali = nepaliNumber(number);\r\n const finalNumber = nepaliFormat(nepali, \"ne\");\r\n return finalNumber;\r\n};\r\n\r\nconst columns = [\r\n  { id: \"country\", label: \"देस\", minWidth: 30 , maxWidth: 50 },\r\n  {\r\n    id: \"newCases\",\r\n    label: \" नयाँ संक्रमण\",\r\n    style: {\r\n      minWidth: 30,\r\n      color: 'red'\r\n    },\r\n    align: \"right\",\r\n  },{\r\n    id: \"totalCases\",\r\n    label: \"जम्मा संक्रमित\",\r\n    minWidth:30,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"totalDeaths\",\r\n    label: \"कुल मृत्यु\",\r\n    minWidth:30,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"newDeaths\",\r\n    label: \"नयाँ मृतक \",\r\n    minWidth:30,\r\n    align: \"right\",\r\n    style: {\r\n      minWidth: 30,\r\n      color: 'red'\r\n    },\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"totalRecovered\",\r\n    label: \"कुल निको भएको\",\r\n    minWidth:30,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  {\r\n    id: \"criticalCases\",\r\n    label: \"गम्भिर केसहरु \",\r\n    minWidth:30,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(),\r\n  },\r\n  \r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100vw\",\r\n    marginTop: theme.spacing(5)\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  Skeleton: {\r\n    height: '1000px'\r\n  }\r\n}));\r\n\r\nfunction createData(country, NewConfirmedNepali,TotalConfirmedNepali , TotalDeathsNepali, NewDeathsNepali,TotalRecoveredNepali, NewRecoveredNepali ) {\r\n const newCases = '+ '+nepaliNumberFormat(NewConfirmedNepali);\r\n const totalCases = nepaliNumberFormat( TotalConfirmedNepali);\r\n const totalDeaths= nepaliNumberFormat(TotalDeathsNepali);\r\n const newDeaths =  '+ '+nepaliNumberFormat(NewDeathsNepali);\r\n const totalRecovered = nepaliNumberFormat(TotalRecoveredNepali);\r\n const criticalCases = nepaliNumberFormat(NewRecoveredNepali);\r\n \r\n \r\n return { country,newCases, totalCases, totalDeaths, newDeaths,totalRecovered, criticalCases };\r\n}\r\n\r\n\r\n\r\nexport default function WoldInfo(props) {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState([])\r\n  const [rows, setRows] = useState([]);\r\n \r\n   useEffect(()=>{\r\n     const holder = [];\r\n     data.map((item, index) => \r\n\r\n    index > 8 && index !== 17 && index !== 18 &&\r\n   holder.push(createData(item.country, item.newCases, item.totalCases, item.totalDeaths, item.newDeaths, item.totalRecovered, item.criticalCases ))\r\n   )\r\n   setRows(holder);\r\n\r\n   },[data])\r\n\r\n \r\n\r\n  useEffect(()=> {\r\n    Axios.get(\"https://nepalcorona.info/api/v1/data/world\")\r\n    .then((res) => {\r\n      console.log(res.data)\r\n      setData(res.data);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  },[])\r\n\r\n return (\r\n   rows[0] ? <>\r\n   <WorldPannel data={data}/>\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column, index) => (\r\n                <TableCell\r\n                size='small'\r\n                  key={index}\r\n                  align={column.align}\r\n                  style={column.style}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            { data[0] && rows\r\n              .map((row,index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell indec={column.id} style={column.style} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper> \r\n    </>: <>\r\n     <div className={classes.Skeleton}>\r\n              {\" \"}\r\n              <Skeleton />\r\n              <Skeleton animation={false} />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton />\r\n              <Skeleton animation={false} />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton />\r\n              <Skeleton animation={false} />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n              <Skeleton animation=\"wave\" />\r\n            </div>\r\n           \r\n    </>\r\n  \r\n  );\r\n  \r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Paper,\r\n  Container,\r\n  makeStyles,\r\n  Toolbar,\r\n  Grid,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  HomeSharp,\r\n  EventNoteSharp,\r\n  PublicOutlined,\r\n  ExploreSharp,\r\n  EmailSharp,\r\n  CopyrightSharp,\r\n} from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaGithub, FaInstagram, FaTwitter } from \"react-icons/fa\";\r\n\r\nexport default function Footer(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Container>\r\n        \r\n            <Grid container>\r\n              <Grid item xs={12} sm={6}>\r\n                    <List>\r\n                      <ListItem>\r\n                        <Link style={{ textDecoration: \"none\" }} to=\"/\">\r\n                          <Button className={classes.iconButton}>\r\n                            <HomeSharp style={{ marginRight: \"13px\" }} />{\" \"}\r\n                            गृहपृष्ठ{\" \"}\r\n                          </Button>\r\n                        </Link>\r\n                      </ListItem>\r\n\r\n                      <ListItem>\r\n                        <Link style={{ textDecoration: \"none\" }} to=\"/news\">\r\n                          <Button className={classes.iconButton}>\r\n                            <EventNoteSharp style={{ marginRight: \"13px\" }} />{\" \"}\r\n                            समाचारहरु\r\n                          </Button>\r\n                        </Link>\r\n                      </ListItem>\r\n\r\n                      <ListItem>\r\n                        <Link\r\n                          style={{ textDecoration: \"none\" }}\r\n                          to=\"/worldinfo\"\r\n                        >\r\n                          <Button className={classes.iconButton}>\r\n                            <PublicOutlined style={{ marginRight: \"13px\" }} />\r\n                            विस्व तथ्यांक\r\n                          </Button>\r\n                        </Link>\r\n                      </ListItem>\r\n\r\n                      <ListItem>\r\n                        <Link\r\n                          style={{ textDecoration: \"none\" }}\r\n                          to=\"/nepalinfo\"\r\n                        >\r\n                          <Button className={classes.iconButton}>\r\n                            <ExploreSharp style={{ marginRight: \"13px\" }} />{\" \"}\r\n                            नेपालको तथ्यांक{\" \"}\r\n                          </Button>\r\n                        </Link>\r\n                      </ListItem>\r\n                    </List>\r\n                  \r\n                \r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n               \r\n                    <List>\r\n                      <ListItem>\r\n                        <Typography>Email us on:</Typography>\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <Toolbar>\r\n                          <EmailSharp style={{ marginRight: \"13px\" }} />{\" \"}\r\n                          <Typography>sujandahal38@gmail.com</Typography>{\" \"}\r\n                        </Toolbar>\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <Typography>Find us on:</Typography>\r\n                      </ListItem>\r\n                      <ListItem>\r\n                        <Toolbar>\r\n                          <a href=\"https://www.github.com/sujandahal38\">\r\n                            <FaGithub\r\n                              size=\"1.5em\"\r\n                              color=\"white\"\r\n                              className={classes.icon}\r\n                            />\r\n                          </a>\r\n                          <a href=\"https://www.instagram.com/__sujan____/\">\r\n                            <FaInstagram\r\n                              size=\"1.5em\"\r\n                              color=\"white\"\r\n                              className={classes.icon}\r\n                            />\r\n                          </a>\r\n                          <a href=\"https://twitter.com/DahalSd1\">\r\n                            <FaTwitter\r\n                              size=\"1.5em\"\r\n                              color=\"white\"\r\n                              className={classes.icon}\r\n                            />\r\n                          </a>\r\n                        </Toolbar>\r\n                      </ListItem>\r\n                    </List>\r\n              \r\n              </Grid>\r\n            </Grid>\r\n        \r\n        </Container>\r\n      </Paper>\r\n\r\n      <Toolbar\r\n        style={{\r\n          width: \"100vw\",\r\n          paddingTop: \"25px\",\r\n          backgroundColor: \"green\",\r\n          color: \"white\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <CopyrightSharp style={{ marginRight: \"13px\" }} />{\" \"}\r\n        <Typography variant='button'>2020</Typography>\r\n      </Toolbar>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100vw\",\r\n    height: \"auto\",\r\n    backgroundColor: \"#34C307\",\r\n    color: \"white\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  iconButton: {\r\n    color: \"white\",\r\n  },\r\n  icon: {\r\n    margin: theme.spacing(1),\r\n    size: \"2em\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  Drawer,\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { HomeSharp, EventNoteSharp, PublicOutlined, ExploreSharp } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function DrawerMenu(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Drawer\r\n        onClose={props.closeDrawer}\r\n        anchor=\"left\"\r\n        elevation={15}\r\n        open={props.drawer}\r\n      >\r\n        <div className={classes.drawer}>\r\n          <List className={classes.root}>\r\n            <ListItem>\r\n            <Link style={{textDecoration: \"none\"}} to='/'>\r\n              <Button className={classes.iconButton}>\r\n              <HomeSharp style={{ marginRight: \"13px\" }} /> गृहपृष्ठ{\" \"}\r\n              </Button>\r\n              </Link>\r\n            </ListItem>\r\n            <ListItem>\r\n            <Link style={{textDecoration: \"none\"}} to='/news'>\r\n              <Button className={classes.iconButton}>\r\n                <EventNoteSharp style={{ marginRight: \"13px\" }} /> समाचारहरु\r\n              </Button>\r\n              </Link>\r\n            </ListItem>\r\n            <ListItem>\r\n            <Link style={{textDecoration: \"none\"}} to='/worldinfo'>\r\n              <Button className={classes.iconButton}>\r\n              <PublicOutlined style={{ marginRight: \"13px\" }} />विस्व तथ्यांक</Button>\r\n              </Link>\r\n            </ListItem>\r\n            <ListItem>\r\n            <Link style={{textDecoration: \"none\"}} to='/nepalinfo'>\r\n              <Button className={classes.iconButton}><ExploreSharp style={{ marginRight: \"13px\" }} /> नेपालको तथ्यांक </Button>\r\n              </Link>\r\n          \r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  iconButton: {\r\n   \r\n  },\r\n  drawer: {\r\n\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(5),\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  Toolbar,\r\n  Typography,\r\n  Card,\r\n  Grid,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport nepal from \"../assets/flags/nepal.svg\";\r\nimport {\r\n  englishToNepaliNumber as nepaliNumber,\r\n  nepaliNumberFormat as nepaliFormat,\r\n} from \"nepali-number\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\n\r\nconst nepaliNumberFormat = (number) => {\r\n  const nepali = nepaliNumber(number);\r\n  const finalNumber = nepaliFormat(nepali, \"ne\");\r\n  return finalNumber;\r\n};\r\n\r\nexport default function NepalInfo(props) {\r\n const theme = useTheme();\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery(theme.breakpoints.up('md'));\r\n  const [nepalData, setNepalData] = React.useState([]);\r\n\r\n  const fetchData = () => {\r\n    Axios.get(\"https://nepalcorona.info/api/v1/data/nepal\")\r\n      .then((res) => {\r\n        setNepalData(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {nepalData.tested_positive ? (\r\n        <Container>\r\n          <Grid>\r\n            <Grid item xs={12} sm={matches ? 12 : 6 }>\r\n              <Card className={classes.root} elevation={5}>\r\n                <CardHeader title=\"नेपाल\" />\r\n                <CardMedia className={classes.media} image={nepal} />\r\n                <CardContent>\r\n                  <Grid container>\r\n                    <Grid item xs={12} sm={6}>\r\n                    <Toolbar className={classes.worldData}>\r\n                    <Typography>जम्मा संक्रमित :</Typography>\r\n                    <Typography color=\"primary\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(nepalData.tested_positive)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>कुल मृत्यु :</Typography>\r\n                    <Typography color=\"error\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(nepalData.deaths)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>नयाँ संक्रमण :</Typography>\r\n                    <Typography color=\"error\" className={classes.numbers}>\r\n                      {nepaliNumberFormat(nepalData.deaths)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                  <Toolbar className={classes.worldData}>\r\n                    <Typography>कुल निको भएको :</Typography>\r\n                    <Typography\r\n                      style={{ color: \"#34C307\" }}\r\n                      className={classes.numbers}\r\n                    >\r\n                      {nepaliNumberFormat(nepalData.recovered)}\r\n                    </Typography>\r\n                  </Toolbar>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Toolbar>\r\n                        <Typography className={classes.rightData}>\r\n                          जम्मा टेस्ट भएको :\r\n                        </Typography>\r\n                        <Typography color=\"primary\" className={classes.numbers}>\r\n                          {nepaliNumberFormat(nepalData.tested_total)}\r\n                        </Typography>\r\n                      </Toolbar>\r\n                      <Toolbar>\r\n                        <Typography className={classes.rightData}>\r\n                          इसोलेसनमा रखिएको :\r\n                        </Typography>\r\n\r\n                        <Typography color=\"primary\" className={classes.numbers}>\r\n                          {nepaliNumberFormat(nepalData.in_isolation)}\r\n                        </Typography>\r\n                      </Toolbar>\r\n                      <Toolbar>\r\n                        <Typography className={classes.rightData}>\r\n                          नतिजा आउन बाकी :\r\n                        </Typography>\r\n                        <Typography color=\"primary\" className={classes.numbers}>\r\n                          {nepaliNumberFormat(nepalData.pending_result)}\r\n                        </Typography>\r\n                      </Toolbar>{\" \"}\r\n                    </Grid>\r\n                  </Grid>\r\n                 \r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      ) : (\r\n        <>\r\n          <Skeleton animation=\"wave\" />\r\n          <Skeleton animation=\"wave\" />\r\n          <Skeleton animation=\"wave\" />\r\n          <Skeleton animation=\"wave\" />\r\n          <Skeleton animation=\"wave\" />\r\n          <Skeleton animation=\"wave\" />\r\n          <Skeleton animation=\"wave\" />\r\n          <Skeleton animation=\"wave\" />\r\n          <Skeleton animation=\"wave\" />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(4),\r\n  },\r\n  nepalIcon: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      height: theme.spacing(15),\r\n      width: theme.spacing(15),\r\n    },\r\n    height: theme.spacing(25),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  worldData: {\r\n    justifyContent: \"left\",\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n  },\r\n  numbers: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  rightData: {\r\n    \r\n  },\r\n}));\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport SocialBar from './components/topBar/socialBar';\nimport Header from './components/header/Header';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/homePage';\nimport WorldInfo from \"./pages/worldInfo\";\nimport Footer from './components/footer/footer';\nimport DrawerMenu from './components/drawer/drawerMenu';\nimport News from './components/cards/News';\nimport 'antd/dist/antd.css';\nimport NepalInfo from './pages/nepalInfo';\n\n\nfunction App(props) {\n  document.title = 'कोरोना संक्र्मण तथ्यांक'\n  const closeDrawer = (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n     setDrawer(false);\n    }\n   setDrawer(false);\n  }\n  const [drawer, setDrawer] = useState(false);\n  const openDrawer = () => {\n    setDrawer(true);\n  }\n \n\n  return (\n    <div className=\"App\">\n    \n   \n    <Router>\n    <SocialBar/>\n    <Header openDrawer={openDrawer} />\n      <DrawerMenu drawer={drawer} closeDrawer={closeDrawer}/>\n        <Switch>\n        <Route exact path='/' render={props => <HomePage/> } /> \n        <Route path ='/worldinfo' render={ props => <WorldInfo/> } />\n        <Route  path= '/nepalinfo' render={props => <NepalInfo/>} />\n        <Route path='/news' render={props => <News hideHeader={true} newsLength={100} />} />\n        </Switch>\n        <Footer/>\n    </Router>\n  \n   \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/world .11093ee1.svg\";","module.exports = __webpack_public_path__ + \"static/media/nepal.d1386c42.svg\";","module.exports = __webpack_public_path__ + \"static/media/usa.a035edad.svg\";","module.exports = __webpack_public_path__ + \"static/media/india.2d44de26.svg\";","module.exports = __webpack_public_path__ + \"static/media/spain.c06563a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/italy.3d141447.svg\";","module.exports = __webpack_public_path__ + \"static/media/nepal.4801a87f.svg\";"],"sourceRoot":""}